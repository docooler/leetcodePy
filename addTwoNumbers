class Solution:
    # @return a ListNode
    def addTwoNumbers(self, l1, l2):
        head = l1
        tail = l1
        carrier = 0
        prev = l1

        if l1 == None:
            return l2
        if l2 == None:
            return l1

        while l1 != None or l2 != None:
            if l1 != None and l2 != None:
                addSum = l1.val + l2.val + carrier
                currNode = l1
                val = addSum%10
                carrier = addSum/10
                currNode.val = val
                l1 = l1.next
                l2 = l2.next
                continue

            if (l1 != None and l2 == None ) or (l1 == None and l2 != None):
                work = l1
                if work == None:
                    work =  l2
                while work != None:
                    addSum = work.val + carrier
                    work.val = addSum%10
                    carrier = addSum/10
                    currNode.next = work
                    currNode = currNode.next
                    work = work.next
                break
        if carrier == 1:
            currNode.next = ListNode(1)
        return head
